{"version":3,"sources":["components/icons/icon-circle/icon-circle.jsx","components/icons/icon-cross/icon-cross.jsx","components/play-grid/button/button.jsx","components/play-grid/play-grid.jsx","components/player-panel/player-panel.jsx","components/icons/icon-reload/icon-reload.jsx","components/button-icon/button-icon.jsx","components/icons/icon-info/icon-info.jsx","components/dialog-window/dialog-window.jsx","components/rules-panel/rules-panel.jsx","components/button/button.jsx","components/summary-panel/summary-panel.jsx","components/play-grid-app/play-grid-app.jsx","containers/play-grid-app-container.jsx","components/container/container.jsx","App.js","serviceWorker.js","index.js"],"names":["IconCircle","react_default","a","createElement","xmlns","viewBox","className","d","Component","IconCross","ICONS","CIRCLE","icon_circle_icon_circle","CROSS","icon_cross_icon_cross","Button","handleClick","_this$props","_this","props","index","onClick","icon","this","isDisabled","disabled","INDEXMUS","PlayGrid","cellList","play_grid_button_button","PlayerPanel","title","isActive","cn","PlayerPanel--active","IconReload","ButtonIcon","size","concat","defaultProps","IconInfo","DialogWindow","setContainerRef","element","container","handleWindowClick","e","target","isOpen","DialogWindow--visible","ref","children","button_icon_button_icon","window","addEventListener","removeEventListener","RulesPanel","rest","Object","esm_extends","dialog_window_dialog_window","SummaryPanel","functionReset","_this$props2","currentPlayer","src_components_button_button","PlayGridApp","player","isOpenInfo","changeInfoFunction","isWin","determWinFunction","player_panel_player_panel","icon_info_icon_info","icon_reload_icon_reload","play_grid_play_grid","rules_panel_rules_panel","summary_panel_summary_panel","PLAYER","FIRST","SECOND","PLAYER_FIRST","PLAYER_SECOND","INITIAL_CELL_LIST","WIN_COMBINATIONS","PlayGridContainer","state","setIcon","Promise","resolve","then","checkWinConditions","resetResult","setState","newIsOpenInfo","newIsWin","_this$state","play_grid_app_play_grid_app","_this$state2","newList","toConsumableArray","getIcon","_this$state3","iconIndexList","i","length","swapPlayer","winCombination","counter","k","indexOf","console","log","Container","play_grid_app_container","App","container_container","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80e1ad88.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './icon-circle.css';\r\n\r\nclass IconCircle extends Component {\r\n  render() {\r\n    return (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 32 32\"\r\n        className=\"IconCircle\"\r\n      >\r\n        <path d=\"M16.92 4.12l.45.04.44.06.44.07.44.09.43.11.42.12.42.14.41.15.41.18.41.18.4.21.39.22.38.23.38.25.36.25.35.27.34.28.33.3.31.3.31.31.29.33.28.34.27.35.25.36.25.38.23.38.22.39.21.4.18.41.18.41.15.41.14.42.12.42.11.43.09.44.07.44.06.44.04.45.02.46.01.46-.01.46-.02.46-.04.45-.06.44-.07.44-.09.44-.11.43-.12.42-.14.42-.15.41-.18.41-.18.41-.21.4-.22.39-.23.38-.25.38-.25.36-.27.35-.28.34-.29.33-.31.31-.31.3-.33.3-.34.28-.35.27-.36.25-.38.25-.38.23-.39.22-.4.21-.41.18-.41.18-.41.15-.42.14-.42.12-.43.11-.44.09-.44.07-.44.06-.45.04-.46.02-.46.01-.46-.01-.46-.02-.45-.04-.44-.06-.44-.07-.44-.09-.43-.11-.42-.12-.42-.14-.41-.15-.41-.18-.41-.18-.39-.21-.4-.22-.38-.23-.38-.25-.36-.25-.35-.27-.34-.28-.33-.3-.31-.3-.3-.31-.3-.33-.28-.34-.27-.35-.25-.36-.25-.38-.23-.38-.22-.39-.21-.4-.18-.41-.18-.41-.15-.41-.14-.42-.12-.42-.11-.43-.09-.44-.07-.44-.06-.44-.04-.45-.02-.46-.01-.46.01-.46.02-.46.04-.45.06-.44.07-.44.09-.44.11-.43.12-.42.14-.42.15-.41.18-.41.18-.41.21-.4.22-.39.23-.38.25-.38.25-.36.27-.35.28-.34.3-.33.3-.31.31-.3.33-.3.34-.28.35-.27.36-.25.38-.25.38-.23.4-.22.39-.21.41-.18.41-.18.41-.15.42-.14.42-.12.43-.11.44-.09.44-.07.44-.06.45-.04.46-.02.46-.01.46.01.46.02zM15.1 7.61l-.44.06-.44.07-.43.11-.42.12-.41.15-.4.17-.4.19-.39.22-.38.23-.37.25-.34.27-.34.28-.31.3-.3.31-.28.34-.27.34-.25.37-.23.38-.22.39-.19.4-.17.4-.15.41-.12.42-.11.43-.07.43-.06.45-.04.44-.01.46.01.46.04.44.06.45.07.43.11.43.12.42.15.41.17.4.19.4.22.39.23.38.25.37.27.34.28.34.3.31.31.3.34.28.34.27.37.25.38.23.39.22.4.19.4.17.41.15.42.12.43.11.44.07.44.06.44.04.46.01.46-.01.44-.04.45-.06.43-.07.43-.11.42-.12.41-.15.4-.17.4-.19.39-.22.38-.23.37-.25.34-.27.34-.28.31-.3.3-.31.28-.34.27-.34.25-.37.23-.38.22-.39.19-.4.17-.4.15-.41.12-.42.11-.43.08-.43.05-.45.04-.44.01-.46-.01-.46-.04-.44-.05-.45-.08-.43-.11-.43-.12-.42-.15-.41-.17-.4-.19-.4-.22-.39-.23-.38-.25-.37-.27-.34-.28-.34-.3-.31-.31-.3-.34-.28-.34-.27-.37-.25-.38-.23-.39-.22-.4-.19-.4-.17-.41-.15-.42-.12-.43-.11-.43-.07-.45-.06-.44-.04-.46-.01-.46.01-.44.04z\" />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IconCircle;\r\n","import React, { Component } from 'react';\r\n\r\nimport './icon-cross.css';\r\n\r\nclass IconCross extends Component {\r\n  render() {\r\n    return (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 32 32\"\r\n        className=\"IconCross\"\r\n      >\r\n        <path d=\"M27.31 7.52c.78-.78.78-2.05 0-2.83-.78-.78-2.05-.78-2.83 0-.56.57-3.39 3.39-8.48 8.48-5.09-5.09-7.92-7.91-8.48-8.48-.78-.78-2.05-.78-2.83 0-.78.78-.78 2.05 0 2.83.57.56 3.39 3.39 8.48 8.48-5.09 5.09-7.91 7.92-8.48 8.48-.78.78-.78 2.05 0 2.83.78.78 2.05.78 2.83 0 .56-.57 3.39-3.39 8.48-8.48 5.09 5.09 7.92 7.91 8.48 8.48.78.78 2.05.78 2.83 0 .78-.78.78-2.05 0-2.83-.57-.56-3.39-3.39-8.48-8.48 5.09-5.09 7.91-7.92 8.48-8.48z\" />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IconCross;\r\n","import React, { Component } from 'react';\r\n\r\nimport IconCircle from '../../icons/icon-circle/icon-circle';\r\nimport IconCross from '../../icons/icon-cross/icon-cross';\r\n\r\nimport './button.css';\r\n\r\nconst ICONS = {\r\n  CIRCLE: <IconCircle />,\r\n  CROSS: <IconCross />\r\n};\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    const { icon } = this.props;\r\n    const isDisabled = !!icon;\r\n\r\n    return (\r\n      <button\r\n        className=\"PlayGrid_Button\"\r\n        onClick={this.handleClick}\r\n        disabled={isDisabled}\r\n      >\r\n        {icon && <span className=\"PlayGrid_Button-icon\">{ICONS[icon]}</span>}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { index, onClick } = this.props;\r\n\r\n    onClick(index);\r\n  };\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\n\r\nimport './play-grid.css';\r\n\r\nimport Button from './button/button';\r\n\r\nconst INDEXMUS = {\r\n  ZERO: 0,\r\n  ONE: 1,\r\n  TWO: 2,\r\n  THREE: 3,\r\n  FOUR: 4,\r\n  FIVE: 5,\r\n  SIX: 6,\r\n  SEVEN: 7,\r\n  EIGHT: 8\r\n};\r\n\r\nclass PlayGrid extends Component {\r\n  render() {\r\n    const { onClick, cellList } = this.props;\r\n\r\n    return (\r\n      <div className=\"PlayGrid\">\r\n        <div className=\"PlayGrid-row\">\r\n          <div className=\"PlayGrid-cell\">\r\n            <Button\r\n              index={INDEXMUS.ZERO}\r\n              onClick={onClick}\r\n              icon={cellList[0]}\r\n            />\r\n          </div>\r\n          <div className=\"PlayGrid-cell\">\r\n            <Button index={INDEXMUS.ONE} onClick={onClick} icon={cellList[1]} />\r\n          </div>\r\n          <div className=\"PlayGrid-cell\">\r\n            <Button index={INDEXMUS.TWO} onClick={onClick} icon={cellList[2]} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"PlayGrid-row\">\r\n          <div className=\"PlayGrid-cell\">\r\n            <Button\r\n              index={INDEXMUS.THREE}\r\n              onClick={onClick}\r\n              icon={cellList[3]}\r\n            />\r\n          </div>\r\n          <div className=\"PlayGrid-cell\">\r\n            <Button\r\n              index={INDEXMUS.FOUR}\r\n              onClick={onClick}\r\n              icon={cellList[4]}\r\n            />\r\n          </div>\r\n          <div className=\"PlayGrid-cell\">\r\n            <Button\r\n              index={INDEXMUS.FIVE}\r\n              onClick={onClick}\r\n              icon={cellList[5]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"PlayGrid-row\">\r\n          <div className=\"PlayGrid-cell\">\r\n            <Button index={INDEXMUS.SIX} onClick={onClick} icon={cellList[6]} />\r\n          </div>\r\n          <div className=\"PlayGrid-cell\">\r\n            <Button\r\n              index={INDEXMUS.SEVEN}\r\n              onClick={onClick}\r\n              icon={cellList[7]}\r\n            />\r\n          </div>\r\n          <div className=\"PlayGrid-cell\">\r\n            <Button\r\n              index={INDEXMUS.EIGHT}\r\n              onClick={onClick}\r\n              icon={cellList[8]}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayGrid;\r\n","import React, { Component } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport './player-panel.css';\r\n\r\nclass PlayerPanel extends Component {\r\n  render() {\r\n    const { icon, title, isActive } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={cn('PlayerPanel', {\r\n          'PlayerPanel--active': isActive\r\n        })}\r\n      >\r\n        <h1 className=\"PlayerPanel-title\">{title}</h1>\r\n        <div className=\"PlayerPanel-separator\" />\r\n        <span className=\"PlayerPanel-icon\">{icon}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerPanel;\r\n","import React, { Component } from 'react';\r\n\r\nimport './icon-reload.css';\r\n\r\nclass IconReload extends Component {\r\n  render() {\r\n    return (\r\n      <svg\r\n        className=\"IconReload\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 32 32\"\r\n      >\r\n        <path d=\"M27.97 9.98c-.29.12-2.59 1.11-2.88 1.23C23.19 8.09 19.76 6 15.84 6 9.88 6 5.02 10.85 5.02 16.82c0 5.96 4.86 10.82 10.82 10.82.84 0 1.51-.68 1.51-1.51 0-.84-.67-1.51-1.51-1.51-4.3 0-7.8-3.5-7.8-7.8s3.5-7.8 7.8-7.8c2.67 0 5.04 1.35 6.44 3.4-.27.12-2.46 1.06-2.74 1.18-.29.13-.47.35-.5.61-.03.27.11.52.37.7.71.49 6.35 4.42 7.06 4.91.16.11.34.17.51.17.38 0 .67-.29.74-.71l1.29-8.5a.819.819 0 0 0-.16-.66c-.2-.23-.54-.29-.88-.14z\" />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IconReload;\r\n","import React, { Component } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport './button-icon.css';\r\n\r\nclass ButtonIcon extends Component {\r\n  static defaultProps = {\r\n    size: 'normal'\r\n  };\r\n\r\n  render() {\r\n    const { icon, size, onClick } = this.props;\r\n\r\n    return (\r\n      <button\r\n        className={cn('ButtonIcon', `ButtonIcon--size-${size}`)}\r\n        onClick={onClick}\r\n      >\r\n        <span className=\"ButtonIcon-holder\">{icon}</span>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonIcon;\r\n","import React, { Component } from 'react';\r\n\r\nimport './icon-info.css';\r\n\r\nclass IconInfo extends Component {\r\n  render() {\r\n    return (\r\n      <svg\r\n        className=\"IconInfo\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 32 32\"\r\n      >\r\n        <path d=\"M21 25.4l-.3 1.4c-1 .4-1.8.7-2.4.9-.6.2-1.3.3-2.1.3-1.2 0-2.2-.3-2.8-.9-.7-.6-1-1.3-1-2.3 0-.4 0-.7.1-1.1.1-.4.1-.8.2-1.3L14 18l.3-1.2c.1-.4.1-.7.1-1 0-.6-.1-1-.4-1.2-.2-.2-.7-.3-1.3-.3-.3 0-.7.1-1 .2l-.9.3.3-1.4 2.4-.9c.8-.2 1.5-.4 2.1-.4 1.2 0 2.1.3 2.8.9.7.6 1 1.3 1 2.3 0 .2 0 .5-.1 1 0 .5-.1.9-.3 1.3L17.7 22l-.3 1.2c-.1.5-.1.8-.1 1 0 .6.1 1 .4 1.2.3.2.7.3 1.4.3.3 0 .7-.1 1-.2.4.1.7 0 .9-.1zm.3-18.6c0 .8-.3 1.4-.9 2-.6.5-1.3.8-2.1.8s-1.5-.3-2.1-.8c-.6-.5-.9-1.2-.9-2s.3-1.4.9-2c.6-.5 1.3-.8 2.1-.8s1.5.3 2.1.8c.6.6.9 1.2.9 2z\" />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IconInfo;\r\n","import React, { Component } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport IconButtom from '../button-icon/button-icon';\r\nimport IconCross from '../icons/icon-cross/icon-cross';\r\n\r\nimport './dialog-window.css';\r\n\r\nclass DialogWindow extends Component {\r\n  render() {\r\n    const { isOpen, onClick } = this.props;\r\n    return (\r\n      <div\r\n        className={cn('DialogWindow', {\r\n          'DialogWindow--visible': isOpen\r\n        })}\r\n      >\r\n        <div className=\"DialogWindow-container\" ref={this.setContainerRef}>\r\n          <div className=\"DialogWindow-content\">\r\n            {this.props.children}\r\n\r\n            <div className=\"DialogWindow-iconButtom\">\r\n              <IconButtom\r\n                size={'small'}\r\n                icon={<IconCross />}\r\n                onClick={onClick}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('click', this.handleWindowClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('click', this.handleWindowClick);\r\n  }\r\n\r\n  setContainerRef = element => {\r\n    this.container = element;\r\n  };\r\n\r\n  handleWindowClick = e => {\r\n    const { target } = e;\r\n\r\n    if (target === this.container) {\r\n      this.props.onClick();\r\n    }\r\n  };\r\n}\r\n\r\nexport default DialogWindow;\r\n","import React, { Component } from 'react';\r\n\r\nimport DialogWindow from '../dialog-window/dialog-window';\r\n\r\nimport './rules-panel.css';\r\n\r\nclass RulesPanel extends Component {\r\n  render() {\r\n    const { ...rest } = this.props;\r\n    return (\r\n      <DialogWindow {...rest}>\r\n        <div className=\"RulesPanel\">\r\n          <h3 className=\"RulesPanel-title\">Правила игры</h3>\r\n          <ol className=\"RulesPanel-content\">\r\n            <li>Первым всегда начинает ход Player 1.</li>\r\n            <li>\r\n              Игроки по очереди ставят на свободные клетки поля 3х3 знаки (один\r\n              всегда крестики, другой всегда нолики).\r\n            </li>\r\n            <li>\r\n              Первый, выстроивший в ряд 3 своих фигур по вертикали, горизонтали\r\n              или диагонали, выигрывает.\r\n            </li>\r\n          </ol>\r\n        </div>\r\n      </DialogWindow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RulesPanel;\r\n","import React, { Component } from 'react';\r\n\r\nimport './button.css';\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    const { title, onClick } = this.props;\r\n    return (\r\n      <button className=\"Button\" onClick={onClick}>\r\n        {title}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\n\r\nimport './summary-panel.css';\r\n\r\nimport DialogWindow from '../dialog-window/dialog-window';\r\nimport Button from '../button/button';\r\n\r\nclass SummaryPanel extends Component {\r\n  render() {\r\n    const { currentPlayer, onClick, isOpen } = this.props;\r\n    return (\r\n      <DialogWindow isOpen={isOpen} onClick={onClick}>\r\n        <div className=\"SummaryPanel\">\r\n          <h3 className=\"RulesPanel-title\">\r\n            Поздравляем {currentPlayer} с победой!\r\n          </h3>\r\n          <div className=\"RulesPanel-buttonReset\">\r\n            <Button onClick={this.handleClick} title={'Начать заново'} />\r\n          </div>\r\n        </div>\r\n      </DialogWindow>\r\n    );\r\n  }\r\n  handleClick = () => {\r\n    const { onClick, functionReset } = this.props;\r\n    onClick();\r\n    functionReset();\r\n  };\r\n}\r\n\r\nexport default SummaryPanel;\r\n","import React, { Component } from 'react';\r\n\r\nimport PlayGrid from '../play-grid/play-grid';\r\nimport PlayerPanel from '../player-panel/player-panel';\r\nimport IconCross from '../icons/icon-cross/icon-cross';\r\nimport IconCircle from '../icons/icon-circle/icon-circle';\r\nimport IconReload from '../icons/icon-reload/icon-reload';\r\nimport IconButton from '../button-icon/button-icon';\r\nimport IconInfo from '../icons/icon-info/icon-info';\r\nimport RulesPanel from '../rules-panel/rules-panel';\r\nimport SummaryPanel from '../summary-panel/summary-panel';\r\n\r\nimport './play-grid-app.css';\r\n\r\nclass PlayGridApp extends Component {\r\n  render() {\r\n    const {\r\n      onClick,\r\n      cellList,\r\n      player,\r\n      functionReset,\r\n      isOpenInfo,\r\n      changeInfoFunction,\r\n      isWin,\r\n      determWinFunction\r\n    } = this.props;\r\n    return (\r\n      <section className=\"PlayGridApp\">\r\n        <h1 className=\"PlayGridApp-title\">Tic Tac Toe</h1>\r\n        <div className=\"PlayGridApp-playerPanel\">\r\n          <div className=\"PlayGridApp-flexWrapper\">\r\n            <div className=\"PlayGridApp-playerPanelItem\">\r\n              <PlayerPanel\r\n                title=\"PLAYER 1\"\r\n                icon={<IconCross />}\r\n                isActive={player === 'PLAYER_FIRST'}\r\n              />\r\n            </div>\r\n            <div className=\"PlayGridApp-playerPanelItem\">\r\n              <PlayerPanel\r\n                title=\"PLAYER 2\"\r\n                icon={<IconCircle />}\r\n                isActive={player === 'PLAYER_SECOND'}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"PlayGridApp-iconButtonPanel\">\r\n          <div className=\"PlayGridApp-iconButtonPanelItem\">\r\n            <IconButton icon={<IconInfo />} onClick={changeInfoFunction} />\r\n          </div>\r\n          <div className=\"PlayGridApp-iconButtonPanelItem\">\r\n            <IconButton icon={<IconReload />} onClick={functionReset} />\r\n          </div>\r\n        </div>\r\n        <div className=\"PlayGridApp-content\">\r\n          <PlayGrid onClick={onClick} cellList={cellList} />\r\n        </div>\r\n\r\n        <RulesPanel isOpen={isOpenInfo} onClick={changeInfoFunction} />\r\n        <SummaryPanel\r\n          isOpen={isWin}\r\n          currentPlayer={player}\r\n          onClick={determWinFunction}\r\n          functionReset={functionReset}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayGridApp;\r\n","import React, { Component } from 'react';\r\n\r\nimport PlayGridApp from '../components/play-grid-app/play-grid-app';\r\n\r\nconst PLAYER = {\r\n  FIRST: 'PLAYER_FIRST',\r\n  SECOND: 'PLAYER_SECOND'\r\n};\r\n\r\nconst ICONS = {\r\n  PLAYER_FIRST: 'CROSS',\r\n  PLAYER_SECOND: 'CIRCLE'\r\n};\r\n\r\nconst INITIAL_CELL_LIST = ['', '', '', '', '', '', '', '', ''];\r\n\r\nconst WIN_COMBINATIONS = [\r\n  [0, 1, 2],\r\n  [3, 4, 5],\r\n  [6, 7, 8],\r\n  [0, 3, 6],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  [0, 4, 8],\r\n  [2, 4, 6]\r\n];\r\n\r\nclass PlayGridContainer extends Component {\r\n  state = {\r\n    player: PLAYER.FIRST,\r\n    cellList: INITIAL_CELL_LIST,\r\n    isOpenInfo: false,\r\n    isWin: false\r\n  };\r\n\r\n  render() {\r\n    const { cellList, player, isOpenInfo, isWin } = this.state;\r\n    return (\r\n      <PlayGridApp\r\n        onClick={this.handleClick}\r\n        cellList={cellList}\r\n        player={player}\r\n        functionReset={this.resetResult}\r\n        isOpenInfo={isOpenInfo}\r\n        changeInfoFunction={this.changeInfoFunction}\r\n        isWin={isWin}\r\n        determWinFunction={this.determWinFunction}\r\n      />\r\n    );\r\n  }\r\n\r\n  getIcon(player) {\r\n    return ICONS[player];\r\n  }\r\n\r\n  setIcon(index) {\r\n    const { cellList, player } = this.state;\r\n\r\n    const newList = [...cellList];\r\n\r\n    const icon = this.getIcon(player);\r\n\r\n    newList[index] = icon;\r\n    this.setState({ cellList: newList });\r\n  }\r\n\r\n  checkWinConditions() {\r\n    const { cellList, player } = this.state;\r\n\r\n    const icon = this.getIcon(player);\r\n\r\n    let iconIndexList = [];\r\n\r\n    for (let i in cellList) {\r\n      if (cellList[i] === icon) {\r\n        iconIndexList = [...iconIndexList, +i];\r\n      }\r\n    }\r\n\r\n    if (iconIndexList.length < 3) {\r\n      this.swapPlayer();\r\n      return;\r\n    }\r\n\r\n    for (let i in WIN_COMBINATIONS) {\r\n      const winCombination = WIN_COMBINATIONS[i];\r\n\r\n      let counter = 0;\r\n      for (let k in winCombination) {\r\n        const index = winCombination[k];\r\n\r\n        if (iconIndexList.indexOf(index) === -1) break;\r\n\r\n        counter++;\r\n      }\r\n\r\n      if (counter === 3) {\r\n        this.determWinFunction();\r\n        console.log(this.state.isWin);\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.swapPlayer();\r\n  }\r\n\r\n  swapPlayer() {\r\n    this.setState(state => {\r\n      const player =\r\n        state.player === PLAYER.FIRST ? PLAYER.SECOND : PLAYER.FIRST;\r\n\r\n      return { player };\r\n    });\r\n  }\r\n\r\n  handleClick = index => {\r\n    this.setIcon(index);\r\n\r\n    const promise = new Promise(resolve => {\r\n      this.setIcon(index);\r\n      resolve();\r\n    });\r\n\r\n    promise.then(() => this.checkWinConditions());\r\n  };\r\n\r\n  resetResult = () => {\r\n    this.setState({ cellList: INITIAL_CELL_LIST, player: PLAYER.FIRST });\r\n  };\r\n\r\n  changeInfoFunction = () => {\r\n    const { isOpenInfo } = this.state;\r\n    const newIsOpenInfo = !isOpenInfo;\r\n    this.setState({ isOpenInfo: newIsOpenInfo });\r\n  };\r\n\r\n  determWinFunction = () => {\r\n    const { isWin } = this.state;\r\n    const newIsWin = !isWin;\r\n    this.setState({ isWin: newIsWin });\r\n  };\r\n}\r\n\r\nexport default PlayGridContainer;\r\n","import React, { Component } from 'react';\r\n\r\nimport PlayGridAppContainer from '../../containers/play-grid-app-container';\r\n\r\nimport './container.css';\r\n\r\nclass Container extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Container\">\r\n        <PlayGridAppContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\n\nimport Container from './components/container/container';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Container />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}